CREATE TABLE IF NOT EXISTS MyUser (
    IdUser INTEGER PRIMARY KEY,
    Name VARCHAR(50) NOT NULL,
    Surname VARCHAR(50) NOT NULL,
    BirthDate DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS MyGroup (
    IdGroup INTEGER PRIMARY KEY,
    Interest VARCHAR(50) NOT NULL, 
    NameGrp VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS Friends (
    IdUser1 INTEGER,
    IdUser2 INTEGER,
    PRIMARY KEY (IdUser1, IdUser2),
    FOREIGN KEY (IdUser1) REFERENCES MyUser(IdUser) ON DELETE CASCADE,
    FOREIGN KEY (IdUser2) REFERENCES MyUser(IdUser) ON DELETE CASCADE,
    CHECK (IdUser1 < IdUser2) 
);

CREATE TABLE IF NOT EXISTS Follows (
    IdUserFollower INTEGER,
    IdUserFollowed INTEGER,
    PRIMARY KEY (IdUserFollower, IdUserFollowed),
    FOREIGN KEY (IdUserFollower) REFERENCES MyUser(IdUser) ON DELETE CASCADE,
    FOREIGN KEY (IdUserFollowed) REFERENCES MyUser(IdUser) ON DELETE CASCADE,
    CHECK (IdUserFollower <> IdUserFollowed) 
);

CREATE TABLE IF NOT EXISTS Joins (
    IdGroup INTEGER,
    IdUser INTEGER,
    PRIMARY KEY (IdGroup, IdUser),
    FOREIGN KEY (IdGroup) REFERENCES MyGroup(IdGroup) ON DELETE CASCADE,
    FOREIGN KEY (IdUser) REFERENCES MyUser(IdUser) ON DELETE CASCADE
);

DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1
        FROM pg_type
        WHERE typname = 'visibility_enum'
    ) THEN
        CREATE TYPE visibility_enum AS ENUM ('public', 'private');
    END IF;
END $$;

CREATE TABLE IF NOT EXISTS Post (
    IdPost INTEGER PRIMARY KEY,
    Content VARCHAR(255) NOT NULL,
    Date DATE NOT NULL,
    Visibility visibility_enum NOT NULL,  -- Use the ENUM type here
    IdUser INTEGER NOT NULL, 
    IdGroup INTEGER,
    FOREIGN KEY (IdUser) REFERENCES MyUser(IdUser) ON DELETE CASCADE,
    FOREIGN KEY (IdGroup) REFERENCES MyGroup(IdGroup) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS MyViews (
    IdPost INTEGER,
    IdUser INTEGER,
    PRIMARY KEY (IdPost, IdUser),
    FOREIGN KEY (IdPost) REFERENCES Post(IdPost) ON DELETE CASCADE,
    FOREIGN KEY (IdUser) REFERENCES MyUser(IdUser) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Likes (
    IdPost INTEGER,
    IdUser INTEGER,
    PRIMARY KEY (IdPost, IdUser),
    FOREIGN KEY (IdPost) REFERENCES Post(IdPost) ON DELETE CASCADE,
    FOREIGN KEY (IdUser) REFERENCES MyUser(IdUser) ON DELETE CASCADE,
    FOREIGN KEY (IdPost, IdUser) REFERENCES MyViews(IdPost, IdUser) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Shares (
    IdPost INTEGER,
    IdUser INTEGER,
    PRIMARY KEY (IdPost, IdUser),
    FOREIGN KEY (IdPost) REFERENCES Post(IdPost) ON DELETE CASCADE,
    FOREIGN KEY (IdUser) REFERENCES MyUser(IdUser) ON DELETE CASCADE,
    FOREIGN KEY (IdPost, IdUser) REFERENCES MyViews(IdPost, IdUser) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS MyComments (
    IdComment INTEGER PRIMARY KEY,
    IdPost INTEGER NOT NULL,
    IdUser INTEGER NOT NULL,
    Content VARCHAR(255) NOT NULL,
    FOREIGN KEY (IdPost) REFERENCES Post(IdPost) ON DELETE CASCADE,
    FOREIGN KEY (IdUser) REFERENCES MyUser(IdUser) ON DELETE CASCADE,
    FOREIGN KEY (IdPost, IdUser) REFERENCES MyViews(IdPost, IdUser) ON DELETE CASCADE
);
